name: TaskFlow CI/CD

# Run tests on pushes and PRs
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-backend:
    name: Backend (FastAPI)
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: üè´ Checkout Code
        uses: actions/checkout@v4

      - name: üêç Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: üì¶ Setup UV
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: üìö Install Dependencies
        run: uv sync --dev

      - name: üß™ Run Tests
        run: |
          uv run pytest \
            --cov=src \
            --cov-report=term-missing \
            --cov-report=html \
            --cov-fail-under=90 \
            --verbose

      - name: üìä Upload Coverage Reports
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: ./backend/htmlcov/

  test-frontend:
    name: Frontend (React)
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: üè´ Checkout Code
        uses: actions/checkout@v4

      - name: üîß Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: üì¶ Install Dependencies
        run: npm ci

      - name: üß™ Run Tests
        run: npm run test -- --run --coverage

      - name: üèóÔ∏è Build Check
        run: npm run build

      - name: üìä Upload Coverage Reports
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: ./frontend/coverage/

  # Basic integration test
  integration-check:
    name: Basic Integration
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]

    steps:
      - name: üè´ Checkout Code
        uses: actions/checkout@v4

      # Setup backend
      - name: üêç Setup Python (Backend)
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: üì¶ Setup UV
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: üîß Setup Node.js (Frontend)
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: üîó Basic Integration Test
        run: |
          # Start backend and test basic functionality
          cd backend
          uv sync
          timeout 30s uv run uvicorn src.app:app --host 0.0.0.0 --port 8000 &
          BACKEND_PID=$!

          sleep 3

          # Test backend API
          echo "Testing backend API..."
          curl -f http://localhost:8000/ | grep -q "TaskFlow" || exit 1
          curl -f http://localhost:8000/tasks || exit 1

          echo "‚úÖ Basic integration test passed!"
          kill $BACKEND_PID 2>/dev/null || true

  # Deploy to production (only on main branch push)
  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend, integration-check]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: üè´ Checkout Code
        uses: actions/checkout@v4

      - name: üöÄ Deploy to Render
        env:
          RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
        run: |
          if [ -n "$RENDER_DEPLOY_HOOK_URL" ]; then
            curl "$RENDER_DEPLOY_HOOK_URL"
            echo "‚úÖ Deployment triggered on Render"
          else
            echo "‚ö†Ô∏è RENDER_DEPLOY_HOOK_URL not set, skipping deployment"
          fi