name: Backend Tests

# Déclenché sur push vers main et sur les pull requests
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_call:    # Permet d'appeler ce workflow depuis un autre (reusable)

# Contrôle de concurrence : annule les exécutions précédentes si nouveau commit
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test Backend
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Récupérer le code du repository
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      # Étape 2 : Installer Python 3.11
      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Étape 3 : Installer UV (gestionnaire de packages Python moderne)
      - name: 📦 Install UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      # Étape 3.5 : Cache pour accélérer les builds
      - name: 💾 Cache UV dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('backend/pyproject.toml', 'backend/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      # Étape 4 : Installer les dépendances du projet
      - name: 📚 Install dependencies
        run: |
          cd backend
          uv sync

      # Étape 5 : Lancer les tests
      - name: 🧪 Run tests
        run: |
          cd backend
          uv run pytest -v --cov
